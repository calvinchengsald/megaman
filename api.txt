
connect to ssh
 ssh -i "/e/development/AWS/KeyPairs/SaldGamesEc2.pem" ec2-user@ec2-184-73-39-20.compute-1.amazonaws.com

TO LOOK AT NOHUP JOBS
jobs -l
kill -9 PID

server 
alias serverstart='cd ~/megaman/server && nohup npm start > ~/server.log &'
alias clientstart='cd ~/megaman/client && nohup npm start > ~/client.log &'
alias update='cd ~/megaman && git pull'

ROOM OBJECT

clients []
	clientId: client {
		displayName: display name of this client
		socket: socket for htis connection
		roomCode: the roomCode that this player is currently in
		weapons: []
			id: id of this individual weapon
			type: weapon type
			rarity: Rarity.COMMON 
			bullets: [] - list of bullets loaded into this weapon
			slots: how many bullets can be loaded into this weapon
		bullets: []
			id: id of this individual bullet
			type: bullet type
			rarity: Rarity.COMMON
			weaponId : id of the weapon this bullet is loaded into
			damage: damage per bullet
			reloadSpeed: speed for next bullet after this to be fired
	}
rooms []
	roomCode: room {
		gameType: The game mode for this room
		roomCode : 5 letter
		hostId: client id of the host
		hostName: display name of host
		roomState: IN_LOBBY / IN_GAME
		gameCountdownStartTime: Seconds until the game starts
		blockers: [] squares formed by these 2 points are not travesable by players
			x0
			y0
			x1
			y1
		shrinkBoundary: [] squares formed by these 2 points will cause players to take damage when traversed
			x0
			y0
			x1
			y1
		players: []
			clientId: client id of this player
			displayName: display name of this player
			type: the type of avatar this is
			x: xCoordinate
			y: yCoordinate
			state: READY / DEAD / ALIVE / DYING
			animationFrame: the current animation frame
			animationTimer: countdown timer until animation frame is incrememted
		attacks: []
			type: the type of attack this is
			x: xCoordinate
			y: yCoordinate
			moveDirection: direction of movement
			animationFrame: the current animation frame
			animationTimer: countdown timer until animation frame is incrememted
			
	}
	
	
sockets:
	PLAYER_DETAIL: 
		playerDetailAction
	
	
Notes:
	default view for all images/sprites/attacks is heading up

TODO: 
	seperate the animation to its own constant instead of game dependant
	player exp
	joining middle of game?
	clean up frontend so press logic is seperated from app.js
	seperate backend logic so that central game logic is not duplicated in NoEscape and TeamFight
	implement primary and secondary weapon selection
	ui is not reflecting the loading and unloaded state
	
COMPLETED
	2/8
	implement bullet load and unloading
	
	12/16
	stat card screen for weapon and bullets
	show weapon and all loaded  bullets
	selection of item will highlight
	
	12/12
	tab view for ui
	init inventory view schema
	
	12/9
	init weapon and bullet json 
	init ui for weapon and bullet

	12/8
	game not ending when player leaves - player still "in game" but not visable
	countdown timer for when game starts
	middle boundary
	shrink field

	12/7
	team fight game will seperate players into 2 teams
	able to shoot attack
	end game when 1 team dies
	
	12/5
	json spawn controller for attack spawn rate etc
	clean up UI to seperate the different views into its own classes
	init new game mode: TeamFight
	
	
	player priority when drawing avatar
	attacks now die when colliding with player
	
	12/4
	different sprites per attack
	diff sprite per avatar
	organize attack movement speed on attack json
	directions of attacks
	json per attack
	switchng avatar on menu screen
	animation for avatar and their states
	animation for attacks
	

	12/3
	only host can start game
	error message modal
	seperate logic to index, room, and game 
	
	12/2
	high score - keep track of score
	name of player 