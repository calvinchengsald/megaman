

ROOM OBJECT

clients {}
	clientId: client {
		displayName: display name of this client
		socket: socket for htis connection
		roomCode: the roomCode that this player is currently in
	}
rooms {}
	roomCode: room {
		gameType: The game mode for this room
		roomCode : 5 letter
		hostId: client id of the host
		hostName: display name of host
		roomState: IN_LOBBY / IN_GAME
		players: []
			clientId: client id of this player
			displayName: display name of this player
			type: the type of avatar this is
			x: xCoordinate
			y: yCoordinate
			state: READY / DEAD / ALIVE / DYING
			animationFrame: the current animation frame
			animationTimer: countdown timer until animation frame is incrememted
		attacks: []
			type: the type of attack this is
			x: xCoordinate
			y: yCoordinate
			moveDirection: direction of movement
			animationFrame: the current animation frame
			animationTimer: countdown timer until animation frame is incrememted
			
	}
	
	
sockets:
	PLAYER_DETAIL: 
		playerDetailAction
	
	
Notes:
	default view for all images/sprites/attacks is heading up

TODO: 
	clean up UI to seperate the different views into its own classes
	
COMPLETED
	12/5
	json spawn controller for attack spawn rate etc
	
	
	12/4
	different sprites per attack
	diff sprite per avatar
	organize attack movement speed on attack json
	directions of attacks
	json per attack
	switchng avatar on menu screen
	animation for avatar and their states
	animation for attacks
	

	12/3
	only host can start game
	error message modal
	seperate logic to index, room, and game 
	
	12/2
	high score - keep track of score
	name of player